<?xml version="1.0" encoding="UTF-8"?>
<test-data
    xmlns="http://pmd.sourceforge.net/rule-tests"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://pmd.sourceforge.net/rule-tests http://pmd.sourceforge.net/rule-tests_1_0_0.xsd">

    <test-code>
        <description>Ok integer</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
var x = 1;
        ]]></code>
    </test-code>

    <test-code>
        <description>Bad integer</description>
        <expected-problems>1</expected-problems>
        <code>var x = 999999999999999999999999;</code>
    </test-code>

    <test-code>
        <description>Ok float</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
var x = 1.1234567890123;
        ]]></code>
    </test-code>

    <test-code>
        <description>Bad float</description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
var z = 1.12345678901234567;
        ]]></code>
    </test-code>

    <test-code>
        <description>Ok float w/ exponent</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
var x = 1.12e-4;
        ]]></code>
    </test-code>

    <test-code>
        <description>Bad float w/ exponent</description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
var x = 1.12345678901234567e-4;
        ]]></code>
    </test-code>

    <test-code>
        <description>#861 [ecmascript] InnaccurateNumericLiteral false positive</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
var hex1 = 0x20;
var hex2 = 0X20;
        ]]></code>
    </test-code>

    <test-code>
        <description>[javascript] InaccurateNumericLiteral underscore separator notation false positive #4165</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
const value1a = 1_000_000; // number
const value1b = 1_000.12_34; // decimal
const value2 = 0b1010_0001_1000_0101; // binary
const value3 = 0xA0_B0; // hex
const value4 = 9_223_372_036_854_775_807n; // big int
const value5 = 0o1234_5670; // octal
]]></code>
    </test-code>
</test-data>
