<?xml version="1.0"?>

<projectlist xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:noNamespaceSchemaLocation="projectlist_1_1_0.xsd">
  <description>Standard Projects</description>

  <project>
    <name>checkstyle</name>
    <type>git</type>
    <connection>https://github.com/checkstyle/checkstyle</connection>
    <tag>checkstyle-8.10</tag>

    <exclude-pattern>.*/target/test-classes/com/puppycrawl/tools/checkstyle/.*</exclude-pattern>
    <exclude-pattern>.*/target/generated-sources/.*</exclude-pattern>

    <build-command><![CDATA[#!/usr/bin/env bash
if test -e classpath.txt; then
  exit
fi

set -e

mvn test-compile -B
mvn dependency:build-classpath -DincludeScope=test -Dmdep.outputFile=classpath.txt -B
]]></build-command>
    <auxclasspath-command>echo -n "$(pwd)/target/classes:$(pwd)/target/test-classes:"; cat classpath.txt</auxclasspath-command>
  </project>

  <project>
    <name>spring-framework</name>
    <type>git</type>
    <connection>https://github.com/spring-projects/spring-framework</connection>
    <tag>v5.0.6.RELEASE</tag>

    <exclude-pattern>.*/build/generated-sources/.*</exclude-pattern>

    <build-command><![CDATA[#!/usr/bin/env bash
if test -e classpath.txt; then
  exit
fi

set -e

# Note: openjdk8 will be installed by "before_install.sh"
export JAVA_HOME=${HOME}/openjdk8
export PATH=$JAVA_HOME/bin:$PATH

# keep the tabs!!
(cat <<EOF
--- build.gradle	2020-11-14 09:43:51.705417551 +0000
+++ build.gradle.patched	2020-11-14 09:43:27.265215303 +0000
@@ -1,5 +1,6 @@
 buildscript {
 	repositories {
+		mavenCentral()
 		maven { url "https://repo.spring.io/plugins-release" }
 	}
 	dependencies {
@@ -138,6 +139,7 @@
 	}
 
 	repositories {
+		mavenCentral()
 		maven { url "https://repo.spring.io/libs-release" }
 	}
 
@@ -314,3 +316,20 @@
 	}
 	return version
 }
+
+task createSquishClasspath {
+  doLast {
+    def dependencies = new HashSet()
+    dependencies.addAll(subprojects.configurations.compile.resolvedConfiguration.resolvedArtifacts.file.flatten())
+    dependencies.addAll(subprojects.configurations.optional.resolvedConfiguration.resolvedArtifacts.file.flatten())
+    dependencies.addAll(subprojects.configurations.testCompile.resolvedConfiguration.resolvedArtifacts.file.flatten())
+    dependencies.addAll(subprojects.configurations.testRuntime.resolvedConfiguration.resolvedArtifacts.file.flatten())
+
+    def paths = new ArrayList()
+    paths.addAll(subprojects.jar.outputs.files.asPath)
+    paths.addAll(subprojects.sourceSets.test.output.resourcesDir)
+    paths.addAll(subprojects.sourceSets.test.output.classesDirs.files.flatten())
+    paths.addAll(dependencies)
+    println paths.join(File.pathSeparator)
+  }
+}
EOF
) | patch

./gradlew build testClasses -x javadoc -x dokka -x asciidoctor -x test -x testNG -x api -x distZip
./gradlew createSquishClasspath -q > classpath.txt
]]></build-command>
    <auxclasspath-command>cat classpath.txt</auxclasspath-command>
  </project>

  <project>
    <name>openjdk-11</name>
    <type>git</type>
    <connection>https://github.com/openjdk/jdk</connection>
    <tag>jdk-11+28</tag>
    <src-subpath>src/java.base</src-subpath>
  </project>
</projectlist>
