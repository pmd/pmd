<?xml version="1.0" encoding="UTF-8"?>
<test-data
    xmlns="http://pmd.sourceforge.net/rule-tests"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://pmd.sourceforge.net/rule-tests http://pmd.sourceforge.net/rule-tests_1_0_0.xsd">

    <test-code>
        <description>Simple violation</description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
public class Foo {
    private Foo() { }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>ok, class is final</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public final class Foo {
    private Foo() { }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>One public constructor, not required to be final</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class Foo {
    private Foo() { }
    public Foo(String param) { }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>Ok, subclass using the private constructor</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class Foo {
    private Foo() { }

    public static class Bar extends Foo {
        public Bar() { }
    }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>Ok, subclass using the private constructor of another subclass</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class Foo {
    public Foo() { }

    public static class Bar {
        private Bar() { }
    }

    public static class Barbie extends Bar {
        public Barbie() { }
    }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>Ok, two classes</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class Foo {
    private Foo() { }
}
public class Bar extends Foo {
    public Bar() { }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>One protected constructor, not required to be final</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
class ClassWithOnlyPrivateConstructorsShouldBeFinal {
    private String string;

    protected ClassWithOnlyPrivateConstructorsShouldBeFinal(final Object object) {
        this(object.toString());
    }

    private ClassWithOnlyPrivateConstructorsShouldBeFinal(final String string) {
        super();

        setString(string);
    }

    public final void setString(final String string) {
        this.string = string;
    }

    public String getString() {
        return string;
    }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>One package private constructor, not required to be final</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
class ClassWithOnlyPrivateConstructorsShouldBeFinal {
    private String string;

    ClassWithOnlyPrivateConstructorsShouldBeFinal(final Object object) {
        this(object.toString());
    }

    private ClassWithOnlyPrivateConstructorsShouldBeFinal(final String string) {
        super();

        setString(string);
    }

    public final void setString(final String string) {
        this.string = string;
    }

    public String getString() {
        return string;
    }
}
        ]]></code>
    </test-code>
    <test-code>
        <description>#2536 [java] ClassWithOnlyPrivateConstructorsShouldBeFinal can't detect inner class with only private constructor</description>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>2</expected-linenumbers>
        <code><![CDATA[
            public class Main209 {
                private static class InputBits {
                    private InputBits(int number) { }
                }
            }
            ]]></code>
    </test-code>
    <test-code>
        <description>Private inner class with no ctor</description>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>2</expected-linenumbers>
        <code><![CDATA[
            public class Main209 {
                private static class InputBits {
                    // default ctor is implicitly private
                }
            }
            ]]></code>
    </test-code>

    <test-code regressionTest="false">
        <description>Private abstract classes with abstract methods should be ignored #3668</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class Outer {
    private abstract class Base {
        abstract void run();
    }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>Private abstract classes without abstract methods but with subclasses should be ignored #3668</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class Outer {
    private abstract class Base {
        private void run() {}
    }
    private final class Sub extends Base {}
}
        ]]></code>
    </test-code>

    <test-code regressionTest="false">
        <description>Private abstract classes without abstract methods and subclasses #3668</description>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>2</expected-linenumbers>
        <code><![CDATA[
public class Outer {
    private abstract class Base {
        private void run() {}
    }
}
        ]]></code>
    </test-code>
</test-data>
