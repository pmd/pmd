+- CompilationUnit[@PackageName = "com.sample.test"]
   +- PackageDeclaration[@Name = "com.sample.test"]
   |  +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
   +- ImportDeclaration[@ImportOnDemand = false, @ImportedName = "rx.Observable", @ImportedSimpleName = "Observable", @PackageName = "rx", @Static = false]
   +- ImportDeclaration[@ImportOnDemand = false, @ImportedName = "rx.Subscriber", @ImportedSimpleName = "Subscriber", @PackageName = "rx", @Static = false]
   +- ClassOrInterfaceDeclaration[@Abstract = false, @Annotation = false, @Anonymous = false, @BinaryName = "com.sample.test.pmdTest", @CanonicalName = "com.sample.test.pmdTest", @EffectiveVisibility = Visibility.V_PUBLIC, @Enum = false, @Final = false, @Interface = false, @Local = false, @Nested = false, @PackageName = "com.sample.test", @PackagePrivate = false, @Record = false, @RegularClass = true, @RegularInterface = false, @SimpleName = "pmdTest", @TopLevel = true, @Visibility = Visibility.V_PUBLIC]
      +- ModifierList[@EffectiveModifiers = "{public}", @ExplicitModifiers = "{public}"]
      +- ClassOrInterfaceBody[@Empty = false, @Size = 3]
         +- FieldDeclaration[@EffectiveVisibility = Visibility.V_PRIVATE, @Visibility = Visibility.V_PRIVATE]
         |  +- ModifierList[@EffectiveModifiers = "{private}", @ExplicitModifiers = "{private}"]
         |  +- PrimitiveType[@Kind = PrimitiveTypeKind.BOOLEAN]
         |  +- VariableDeclarator[@Initializer = false, @Name = "stuff"]
         |     +- VariableDeclaratorId[@ArrayType = false, @EffectiveVisibility = Visibility.V_PRIVATE, @EnumConstant = false, @ExceptionBlockParameter = false, @Field = true, @Final = false, @ForLoopVariable = false, @ForeachVariable = false, @FormalParameter = false, @LambdaParameter = false, @LocalVariable = false, @Name = "stuff", @PatternBinding = false, @RecordComponent = false, @ResourceDeclaration = false, @TypeInferred = false, @Visibility = Visibility.V_PRIVATE]
         +- MethodDeclaration[@Abstract = false, @Arity = 0, @EffectiveVisibility = Visibility.V_PUBLIC, @Image = "testSuper", @Name = "testSuper", @Overridden = false, @Varargs = false, @Visibility = Visibility.V_PUBLIC, @Void = false]
         |  +- ModifierList[@EffectiveModifiers = "{public}", @ExplicitModifiers = "{public}"]
         |  +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "Observable"]
         |  |  +- TypeArguments[@Diamond = false, @Empty = false, @Size = 1]
         |  |     +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "Boolean"]
         |  +- FormalParameters[@Empty = true, @Size = 0]
         |  +- Block[@Empty = false, @Size = 1, @containsComment = false]
         |     +- ReturnStatement[]
         |        +- MethodCall[@CompileTimeConstant = false, @Image = "map", @MethodName = "map", @ParenthesisDepth = 0, @Parenthesized = false]
         |           +- MethodCall[@CompileTimeConstant = false, @Image = "create", @MethodName = "create", @ParenthesisDepth = 0, @Parenthesized = false]
         |           |  +- TypeExpression[@CompileTimeConstant = false, @ParenthesisDepth = 0, @Parenthesized = false]
         |           |  |  +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "Observable"]
         |           |  +- ArgumentList[@Empty = false, @Size = 1]
         |           |     +- LambdaExpression[@Arity = 1, @BlockBody = true, @CompileTimeConstant = false, @ExpressionBody = false, @ParenthesisDepth = 0, @Parenthesized = false]
         |           |        +- LambdaParameterList[@Empty = false, @Size = 1]
         |           |        |  +- LambdaParameter[@EffectiveVisibility = Visibility.V_PACKAGE, @Final = false, @TypeInferred = false, @Visibility = Visibility.V_PACKAGE]
         |           |        |     +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
         |           |        |     +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "Subscriber"]
         |           |        |     |  +- TypeArguments[@Diamond = false, @Empty = false, @Size = 1]
         |           |        |     |     +- WildcardType[@LowerBound = true, @UpperBound = false]
         |           |        |     |        +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "String"]
         |           |        |     +- VariableDeclaratorId[@ArrayType = false, @EffectiveVisibility = Visibility.V_PACKAGE, @EnumConstant = false, @ExceptionBlockParameter = false, @Field = false, @Final = false, @ForLoopVariable = false, @ForeachVariable = false, @FormalParameter = true, @LambdaParameter = true, @LocalVariable = false, @Name = "subscriber", @PatternBinding = false, @RecordComponent = false, @ResourceDeclaration = false, @TypeInferred = false, @Visibility = Visibility.V_PACKAGE]
         |           |        +- Block[@Empty = false, @Size = 1, @containsComment = false]
         |           |           +- ExpressionStatement[]
         |           |              +- AssignmentExpression[@CompileTimeConstant = false, @Compound = false, @Operator = AssignmentOp.ASSIGN, @ParenthesisDepth = 0, @Parenthesized = false]
         |           |                 +- VariableAccess[@AccessType = AccessType.WRITE, @CompileTimeConstant = false, @Image = "stuff", @Name = "stuff", @ParenthesisDepth = 0, @Parenthesized = false]
         |           |                 +- BooleanLiteral[@CompileTimeConstant = true, @ParenthesisDepth = 0, @Parenthesized = false, @True = true]
         |           +- ArgumentList[@Empty = false, @Size = 1]
         |              +- LambdaExpression[@Arity = 1, @BlockBody = false, @CompileTimeConstant = false, @ExpressionBody = true, @ParenthesisDepth = 0, @Parenthesized = false]
         |                 +- LambdaParameterList[@Empty = false, @Size = 1]
         |                 |  +- LambdaParameter[@EffectiveVisibility = Visibility.V_PACKAGE, @Final = false, @TypeInferred = true, @Visibility = Visibility.V_PACKAGE]
         |                 |     +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
         |                 |     +- VariableDeclaratorId[@ArrayType = false, @EffectiveVisibility = Visibility.V_PACKAGE, @EnumConstant = false, @ExceptionBlockParameter = false, @Field = false, @Final = false, @ForLoopVariable = false, @ForeachVariable = false, @FormalParameter = true, @LambdaParameter = true, @LocalVariable = false, @Name = "authToken", @PatternBinding = false, @RecordComponent = false, @ResourceDeclaration = false, @TypeInferred = true, @Visibility = Visibility.V_PACKAGE]
         |                 +- BooleanLiteral[@CompileTimeConstant = true, @ParenthesisDepth = 0, @Parenthesized = false, @True = false]
         +- MethodDeclaration[@Abstract = false, @Arity = 0, @EffectiveVisibility = Visibility.V_PUBLIC, @Image = "testSuper2", @Name = "testSuper2", @Overridden = false, @Varargs = false, @Visibility = Visibility.V_PUBLIC, @Void = false]
            +- ModifierList[@EffectiveModifiers = "{public}", @ExplicitModifiers = "{public}"]
            +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "Observable"]
            |  +- TypeArguments[@Diamond = false, @Empty = false, @Size = 1]
            |     +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "Boolean"]
            +- FormalParameters[@Empty = true, @Size = 0]
            +- Block[@Empty = false, @Size = 1, @containsComment = false]
               +- ReturnStatement[]
                  +- MethodCall[@CompileTimeConstant = false, @Image = "map", @MethodName = "map", @ParenthesisDepth = 0, @Parenthesized = false]
                     +- MethodCall[@CompileTimeConstant = false, @Image = "create", @MethodName = "create", @ParenthesisDepth = 0, @Parenthesized = false]
                     |  +- TypeExpression[@CompileTimeConstant = false, @ParenthesisDepth = 0, @Parenthesized = false]
                     |  |  +- ClassOrInterfaceType[@FullyQualified = false, @SimpleName = "Observable"]
                     |  +- ArgumentList[@Empty = false, @Size = 1]
                     |     +- LambdaExpression[@Arity = 1, @BlockBody = true, @CompileTimeConstant = false, @ExpressionBody = false, @ParenthesisDepth = 0, @Parenthesized = false]
                     |        +- LambdaParameterList[@Empty = false, @Size = 1]
                     |        |  +- LambdaParameter[@EffectiveVisibility = Visibility.V_PACKAGE, @Final = false, @TypeInferred = true, @Visibility = Visibility.V_PACKAGE]
                     |        |     +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
                     |        |     +- VariableDeclaratorId[@ArrayType = false, @EffectiveVisibility = Visibility.V_PACKAGE, @EnumConstant = false, @ExceptionBlockParameter = false, @Field = false, @Final = false, @ForLoopVariable = false, @ForeachVariable = false, @FormalParameter = true, @LambdaParameter = true, @LocalVariable = false, @Name = "subscriber", @PatternBinding = false, @RecordComponent = false, @ResourceDeclaration = false, @TypeInferred = true, @Visibility = Visibility.V_PACKAGE]
                     |        +- Block[@Empty = false, @Size = 1, @containsComment = false]
                     |           +- ExpressionStatement[]
                     |              +- AssignmentExpression[@CompileTimeConstant = false, @Compound = false, @Operator = AssignmentOp.ASSIGN, @ParenthesisDepth = 0, @Parenthesized = false]
                     |                 +- VariableAccess[@AccessType = AccessType.WRITE, @CompileTimeConstant = false, @Image = "stuff", @Name = "stuff", @ParenthesisDepth = 0, @Parenthesized = false]
                     |                 +- BooleanLiteral[@CompileTimeConstant = true, @ParenthesisDepth = 0, @Parenthesized = false, @True = true]
                     +- ArgumentList[@Empty = false, @Size = 1]
                        +- LambdaExpression[@Arity = 1, @BlockBody = false, @CompileTimeConstant = false, @ExpressionBody = true, @ParenthesisDepth = 0, @Parenthesized = false]
                           +- LambdaParameterList[@Empty = false, @Size = 1]
                           |  +- LambdaParameter[@EffectiveVisibility = Visibility.V_PACKAGE, @Final = false, @TypeInferred = true, @Visibility = Visibility.V_PACKAGE]
                           |     +- ModifierList[@EffectiveModifiers = "{}", @ExplicitModifiers = "{}"]
                           |     +- VariableDeclaratorId[@ArrayType = false, @EffectiveVisibility = Visibility.V_PACKAGE, @EnumConstant = false, @ExceptionBlockParameter = false, @Field = false, @Final = false, @ForLoopVariable = false, @ForeachVariable = false, @FormalParameter = true, @LambdaParameter = true, @LocalVariable = false, @Name = "authToken", @PatternBinding = false, @RecordComponent = false, @ResourceDeclaration = false, @TypeInferred = true, @Visibility = Visibility.V_PACKAGE]
                           +- BooleanLiteral[@CompileTimeConstant = true, @ParenthesisDepth = 0, @Parenthesized = false, @True = false]
