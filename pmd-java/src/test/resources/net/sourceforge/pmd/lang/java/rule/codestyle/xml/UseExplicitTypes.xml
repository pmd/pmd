<?xml version="1.0" encoding="UTF-8"?>
<test-data
        xmlns="http://pmd.sourceforge.net/rule-tests"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://pmd.sourceforge.net/rule-tests http://pmd.sourceforge.net/rule-tests_1_0_0.xsd">

    <code-fragment id="basic-sample"><![CDATA[
import java.util.function.Function;
import java.util.List;
import java.util.Arrays;

public class Foo {
    public void bar() {
        var s = "a"; // line 7 - violation - literal
        var i = 1;   // line 8 - violation - literal
        String s2 = "a"; // no violation - explicit type
        var f = getFoo(); // line 10 - violation
        var f = new Foo(); // line 11 - violation - ctor call
        Function<Integer, Integer> square = (var x) -> x*x;

        var f = (Integer)getFoo(); // line 14 - violation - cast
        
        List<String> strings = Arrays.asList("a", "b", "c");
        for (var str : strings) { // line 17 - violation - enhanced for loop
            System.out.println(str);
        }
    }

    private String getFoo() {
        return "a";
    }
}
]]></code-fragment>
    
    <test-code>
        <description>No vars anywhere</description>
        <expected-problems>6</expected-problems>
        <expected-linenumbers>7,8,10,11,14,17</expected-linenumbers>
        <code-ref id="basic-sample"/>
    </test-code>

    <test-code>
        <description>Allow literals</description>
        <rule-property name="allowLiterals">true</rule-property>
        <expected-problems>4</expected-problems>
        <expected-linenumbers>10,11,14,17</expected-linenumbers>
        <code-ref id="basic-sample"/>
    </test-code>

    <test-code>
        <description>Allow constructor calls</description>
        <rule-property name="allowCtors">true</rule-property>
        <expected-problems>5</expected-problems>
        <expected-linenumbers>7,8,10,14,17</expected-linenumbers>
        <code-ref id="basic-sample"/>
    </test-code>

    <test-code>
        <description>Allow casts</description>
        <rule-property name="allowCasts">true</rule-property>
        <expected-problems>5</expected-problems>
        <expected-linenumbers>7,8,10,11,17</expected-linenumbers>
        <code-ref id="basic-sample"/>
    </test-code>

    <test-code>
        <description>Allow loop variables</description>
        <rule-property name="allowLoopVariable">true</rule-property>
        <expected-problems>5</expected-problems>
        <expected-linenumbers>7,8,10,11,14</expected-linenumbers>
        <code-ref id="basic-sample"/>
    </test-code>
</test-data>
